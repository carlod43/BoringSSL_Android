name: Build

on: [ push, pull_request ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Configuration Environment
        shell: bash
        run: |
          echo 'android.sdk.channel=3' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          echo 'android.testoptions.manageddevices.emulator.gpu=swiftshader_indirect' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8' >> gradle.properties
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo '84831b9409646a918e30573bab4c9c91346d8abd' > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
          sed -i '' 's|return X509_CERT_DIR;|return "/system/etc/security/cacerts";|' boringssl/src/main/native/src/crypto/x509/x509_def.c
      - name: Build with Gradle
        run: |
          ./gradlew :b:publishToMavenLocal
          ./gradlew :a:assembleDebug
      - name: Test with Gradle
        if: matrix.os == 'macOS-latest'
        run: |
          ./gradlew :a:allDevicesDebugAndroidTest
          ls -l app/build/outputs/androidTest-results/managedDevice/atd64bit/testlog
          rm -v app/build/outputs/androidTest-results/managedDevice/*/testlog/adb.additional_test_output*
      - name: Upload app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-app
          path: app/build/outputs
      - name: Upload library
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-library
          path: ~/.m2
